% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation_interface.R
\name{cvek}
\alias{cvek}
\title{Conducting Gaussian Process Regression based on user-specified formula.}
\usage{
cvek(formula, kern_func_list, data, mode = "loocv", strategy = "stack",
  beta_exp = 1, lambda = exp(seq(-10, 5)), verbose = FALSE)
}
\arguments{
\item{formula}{(formula) A user-supplied formula.}

\item{kern_func_list}{(list) a list of kernel functions in the kernel library}

\item{data}{(data.frame, n*d) a data.frame, list or environment (or object
coercible by as.data.frame to a data.frame), containing the variables in
formula. Neither a matrix nor an array will be accepted.}

\item{mode}{(character) A character string indicating which tuning parameter
criteria is to be used.}

\item{strategy}{(character) A character string indicating which ensemble
strategy is to be used.}

\item{beta_exp}{(numeric/character) A numeric value specifying the parameter
when strategy = "exp" \code{\link{ensemble_exp}}.}

\item{lambda}{(numeric) A numeric string specifying the range of noise to be
chosen. The lower limit of lambda must be above 0.}

\item{verbose}{(logical) Whether to print additional messages.}
}
\value{
A list of results from kernel ensemble estimates. It contains 
lambda (numeric) The estimated tuning parameter. 
beta (matrix, d_fixed*1) fixed effect estimates. 
alpha (matrix, n*1) kernel effect estimates. 
K (matrix, n*n) Estimated ensemble kernel matrix.
u_hat (vector of length K) ensemble weight for kernel matrix.
base_est (list) result list output by the ensemble function.
}
\description{
Conduct gaussian process regression based on the estimated ensemble kernel
matrix.
}
\examples{
# # create data
# data <- as.data.frame(matrix(rnorm(700), ncol = 7,
# dimnames = list(NULL, paste0("x", 1:7))))
# data$y <- as.matrix(data) \%*\% rnorm(7)
# formula <- y ~ x1 + x2 + k(x3, x4)
# kern_par <- data.frame(method = c("rbf", "polynomial", "matern"),
# l = c(.5, 1, 1.5), p = 1:3, stringsAsFactors = FALSE)

# # define kernel library
# kern_func_list <- list()
# for (d in 1:nrow(kern_par)) {
# kern_func_list[[d]] <- generate_kernel(kern_par[d,]$method, 
# kern_par[d,]$l, kern_par[d,]$p)
# }

# cvek(formula, kern_func_list = kern_func_list, data = data)
}
